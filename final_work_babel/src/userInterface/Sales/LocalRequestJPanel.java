/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Sales;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LocalRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequest.workStatus;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yin
 */
public class LocalRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form missionProgressJPanel
     */
    
    JPanel upc;
    EcoSystem system;
    Enterprise enterprise;
    UserAccount SalesAccount;
    Network network;
  
    LocalRequestJPanel(JPanel upc, Enterprise enterprise, UserAccount account, Network network) {
        initComponents();
        this.upc = upc;
        this.system = system;
        this.enterprise = enterprise;
        this.SalesAccount = account;
        this.network = network;
        populateTable();    
        populateCombo();
    }
    
    public void populateCombo(){
        
         for(Enterprise e: network.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getClass().getSimpleName().equals("LocalizationEnterprise")){
                cbLocal.addItem(e.getName());
            }
        }
        
        cbPM.removeAllItems();
        for(UserAccount ua: enterprise.getUserAccountDirectory().getUserAccountList()){
            if(ua.getRole().toString().equals("PMRole")){
                cbPM.addItem(ua.getEmployee().getName());
            }
        }
    
    }
    public void populateTable(){
    
        DefaultTableModel dtm = (DefaultTableModel)tblProject.getModel();
        dtm.setRowCount(0);
        for(Enterprise e: network.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getClass().getSimpleName().equals("LocalizationEnterprise")){
System.out.println(e.getName());
                for(WorkRequest wr: e.getWorkQueue().getWorkRequestList()){
                    if(wr.getClass().getSimpleName().equals("LocalRequest")  ){
                        LocalRequest lr = (LocalRequest) wr;
                        if(lr.getStatus().equals("LocalizeRequested")&&lr.getTransEnterprise().equals(enterprise.getName())){
                            Object[] row = new Object[7];
                            row[0] = lr;
                            row[1] = lr.getRequestDate();
                            row[2] = e.getName();
                            row[3] = lr.getSourceLanguage() + " → " +lr.getDestinationLanguage();
                            row[4] = lr.getWordCount();
                            row[5] = lr.getContentType();
                            row[6] = lr.getStatus();
                            dtm.addRow(row);
                            
                        }
                        
                    }
                }
            }
            
        
        }

    }
     public void populateTableByCompany(String localizationName){
    
        DefaultTableModel dtm = (DefaultTableModel)tblProject.getModel();
        dtm.setRowCount(0);
        for(Enterprise e: network.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getClass().getSimpleName().equals("LocalizationEnterprise")){
System.out.println(e.getName());
                for(WorkRequest wr: e.getWorkQueue().getWorkRequestList()){
                    if(wr.getClass().getSimpleName().equals("LocalRequest")){
                        LocalRequest lr = (LocalRequest) wr;
                        if(lr.getTransEnterprise().equals(enterprise.getName()) && e.getName().equals(localizationName) ){
                            Object[] row = new Object[7];
                            row[0] = lr;
                            row[1] = lr.getRequestDate();
                            row[2] = e.getName();
                            row[3] = lr.getSourceLanguage() + " → " +lr.getDestinationLanguage();
                            row[4] = lr.getWordCount();
                            row[5] = lr.getContentType();
                            row[6] = lr.getStatus();
                            dtm.addRow(row);
                            
                        }
                        
                    }
                }
            }

        }

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProject = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cbLocal = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSample = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        spinnerPrice = new javax.swing.JSpinner();
        SliderPrice = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        cbPM = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        tblProject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Article ID", "StartDate", "LocalizationCopany", "Src→Dest", "Word Count", "Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProjectMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProject);

        jButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton1.setText("Allocate to PM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("← Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cbLocal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter Localization Company" }));
        cbLocal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbLocalItemStateChanged(evt);
            }
        });
        cbLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocalActionPerformed(evt);
            }
        });

        txtSample.setEditable(false);
        txtSample.setColumns(20);
        txtSample.setLineWrap(true);
        txtSample.setRows(5);
        jScrollPane2.setViewportView(txtSample);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Sample:");

        spinnerPrice.setModel(new javax.swing.SpinnerNumberModel(60.0d, 5.0d, 150.0d, 5.0d));
        spinnerPrice.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerPriceStateChanged(evt);
            }
        });

        SliderPrice.setMajorTickSpacing(10);
        SliderPrice.setMinimum(10);
        SliderPrice.setValue(60);
        SliderPrice.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderPriceStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("Unit Price(per thousand words): $");

        cbPM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPMActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel7.setText("Select  a Project Manager: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(cbLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(485, 485, 485))))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spinnerPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SliderPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPM, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(spinnerPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SliderPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2))
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void spinnerPriceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerPriceStateChanged
        // TODO add your handling code here:
        double Price = (double) spinnerPrice.getValue();
        SliderPrice.setValue((int) Price);
    }//GEN-LAST:event_spinnerPriceStateChanged

    private void SliderPriceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderPriceStateChanged
        // TODO add your handling code here:
        double Price = SliderPrice.getValue();
        spinnerPrice.setValue(Price);
    }//GEN-LAST:event_SliderPriceStateChanged

    private void cbPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPMActionPerformed

    private void tblProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProjectMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblProject.getSelectedRow();
         if(selectedRow >= 0){
            LocalRequest lr = (LocalRequest) tblProject.getValueAt(selectedRow, 0);
            txtSample.setText(lr.getContent());

        }else{
            
            JOptionPane.showMessageDialog(null,"Please select any Row");
        }
         
System.out.println("wori");
    }//GEN-LAST:event_tblProjectMouseClicked

    private void cbLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocalActionPerformed
        // TODO add your handling code here:
//        String LocalizationCompany = cbLocal.getSelectedItem().toString();
      //  populateTableByCompany(LocalizationCompany);
    }//GEN-LAST:event_cbLocalActionPerformed

    private void cbLocalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbLocalItemStateChanged
        // TODO add your handling code here:
        
        String LocalizationCompany = cbLocal.getSelectedItem().toString();
        populateTableByCompany(LocalizationCompany);
    }//GEN-LAST:event_cbLocalItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblProject.getSelectedRow();
        String PMName = cbPM.getSelectedItem().toString();
        if(selectedRow >= 0){
            LocalRequest lr = (LocalRequest) tblProject.getValueAt(selectedRow, 0);
            if(lr.getStatus().equals(workStatus.LocalizeRequested.name())){
                    UserAccount PM = enterprise.getUserAccountDirectory().findUserAccountByName(PMName);
                    lr.setSR(SalesAccount);
                    lr.setUnitPrice((double) spinnerPrice.getValue());
                    lr.setPM(PM);
                    lr.setStatus(workStatus.Received.name());
                    populateTable();
            }else{
                    JOptionPane.showMessageDialog(null,"Already Received");
            }
            
        }else{
            
            JOptionPane.showMessageDialog(null,"Please select any Project");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider SliderPrice;
    private javax.swing.JComboBox<String> cbLocal;
    private javax.swing.JComboBox<String> cbPM;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinnerPrice;
    private javax.swing.JTable tblProject;
    private javax.swing.JTextArea txtSample;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.PMs;

import Business.Enterprise.Enterprise;
import Business.Enterprise.LocalizationEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PMsOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LocalRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequest.workStatus;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yin
 */
public class PMsWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PMsWorkAreaJPanel
     */
   
    JPanel upc;
    UserAccount PMaccount;
    Enterprise enterprise;
    Organization organization;
    Network network;
    JPanel jp;
    public PMsWorkAreaJPanel(JPanel userProcessContainer,JPanel jp, UserAccount account, Enterprise enterprise, PMsOrganization organization,Network network) {
       initComponents();
       this.upc = userProcessContainer;      
        this.jp=jp;
       this.enterprise = enterprise;
       this.PMaccount = account;
       this.network = network;
       populateTable();
       upc.remove(0);
       
    }
public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblProject.getModel();
        dtm.setRowCount(0);
        
            for(WorkRequest wr: enterprise.getWorkQueue().getWorkRequestList()){ 
                if(wr.getPM() == PMaccount){
                Object[] row = new Object[9];
                row[0] = wr;
                row[1] = wr.getRequestDate();
                row[2] = wr.getSR().getEmployee().getName();
                row[3] = wr.getSourceLanguage() + " → " +wr.getDestinationLanguage();
                row[4] = wr.getWordCount();
                row[5] = wr.getContentType();
                row[6] = wr.getStatus();
                if(wr.getRequestDate()==null)
                {
                    row[7] ="";
                }
                else
                {
                    row[7] = wr.getRequestDate();
                }
                if(wr.getResolveDate()==null)
                {
                    row[8] ="";
                }
                else
                {
                    row[8] = wr.getResolveDate();
                }
                dtm.addRow(row);
           }
        }
System.out.println("middle");
            for(Enterprise e: network.getEnterpriseDirectory().getEnterpriseList()){
                if(e.getClass().getSimpleName().equals("LocalizationEnterprise")){
                    LocalizationEnterprise le = (LocalizationEnterprise) e;
                    for(WorkRequest wr: le.getWorkQueue().getWorkRequestList()){
System.out.println("shabi");
                        if(wr.getPM() == PMaccount){
                            Object[] row = new Object[9];
                            row[0] = wr;
                            row[1] = wr.getRequestDate();
                            row[2] = wr.getSR().getEmployee().getName();
                            row[3] = wr.getSourceLanguage() + " → " +wr.getDestinationLanguage();
                            row[4] = wr.getWordCount();
                            row[5] = wr.getContentType();
                            row[6] = wr.getStatus();
                            if(wr.getRequestDate()==null)
                {
                    row[7] ="";
                }
                else
                {
                    row[7] = wr.getRequestDate();
                }
                if(wr.getResolveDate()==null)
                {
                    row[8] ="";
                }
                else
                {
                    row[8] = wr.getResolveDate();
                }
                            dtm.addRow(row);
                    }
                    }
                }
            
            }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProject = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Jazz LET", 0, 24)); // NOI18N
        jLabel1.setText("On-Going Project");

        jButton2.setText("Allocate To Translator");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Bar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblProject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Article ID", "StartDate", "Sales Name", "Src→Dest", "Word Count", "Type", "Status", "Allocated Time", "Finished Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProject);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(105, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProject.getSelectedRow();
        if(selectedRow >= 0){
            WorkRequest wr = (WorkRequest) tblProject.getValueAt(selectedRow,0);
            
            if(wr.getStatus().equals(workStatus.Received.name())){
                allocateProjectJPanel panel = new allocateProjectJPanel(upc,enterprise,PMaccount,wr);
                upc.add("allocateProjectJPanel",panel);
                CardLayout layout = (CardLayout) upc.getLayout();
                layout.next(upc);
            }else{
                JOptionPane.showMessageDialog(null,"Already Allocated");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null,"Please select any Row");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         BarJPanel tljp=new BarJPanel(upc,jp,enterprise);
        upc.add("BarJPanel",tljp);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProject;
    // End of variables declaration//GEN-END:variables
}
